/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignOutRouteImport } from './routes/sign-out'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppSandboxRouteImport } from './routes/app/sandbox'
import { Route as AppDashboardRouteImport } from './routes/app/dashboard'
import { Route as AppDashboardIndexRouteImport } from './routes/app/dashboard/index'
import { Route as AppDashboardWorkOrdersRouteImport } from './routes/app/dashboard/work-orders'
import { Route as AppDashboardClientsRouteImport } from './routes/app/dashboard/clients'
import { Route as AppDashboardAdminRouteImport } from './routes/app/dashboard/admin'
import { Route as AppDashboardWorkOrdersIndexRouteImport } from './routes/app/dashboard/work-orders/index'
import { Route as AppDashboardClientsIndexRouteImport } from './routes/app/dashboard/clients/index'
import { Route as AppDashboardAdminIndexRouteImport } from './routes/app/dashboard/admin/index'
import { Route as AppDashboardWorkOrdersCreateRouteImport } from './routes/app/dashboard/work-orders/create'
import { Route as AppDashboardWorkOrdersIdRouteImport } from './routes/app/dashboard/work-orders/$id'
import { Route as AppDashboardProfileIdRouteImport } from './routes/app/dashboard/profile.$id'
import { Route as AppDashboardClientsCreateRouteImport } from './routes/app/dashboard/clients/create'
import { Route as AppDashboardClientsIdRouteImport } from './routes/app/dashboard/clients/$id'
import { Route as AppDashboardAdminUsersRouteImport } from './routes/app/dashboard/admin/users'
import { Route as AppDashboardAdminUsersIndexRouteImport } from './routes/app/dashboard/admin/users/index'
import { Route as AppDashboardAdminUsersIdRouteImport } from './routes/app/dashboard/admin/users/$id'

const SignOutRoute = SignOutRouteImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppSandboxRoute = AppSandboxRouteImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDashboardRoute,
} as any)
const AppDashboardWorkOrdersRoute = AppDashboardWorkOrdersRouteImport.update({
  id: '/work-orders',
  path: '/work-orders',
  getParentRoute: () => AppDashboardRoute,
} as any)
const AppDashboardClientsRoute = AppDashboardClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AppDashboardRoute,
} as any)
const AppDashboardAdminRoute = AppDashboardAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AppDashboardRoute,
} as any)
const AppDashboardWorkOrdersIndexRoute =
  AppDashboardWorkOrdersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppDashboardWorkOrdersRoute,
  } as any)
const AppDashboardClientsIndexRoute =
  AppDashboardClientsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppDashboardClientsRoute,
  } as any)
const AppDashboardAdminIndexRoute = AppDashboardAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDashboardAdminRoute,
} as any)
const AppDashboardWorkOrdersCreateRoute =
  AppDashboardWorkOrdersCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AppDashboardWorkOrdersRoute,
  } as any)
const AppDashboardWorkOrdersIdRoute =
  AppDashboardWorkOrdersIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AppDashboardWorkOrdersRoute,
  } as any)
const AppDashboardProfileIdRoute = AppDashboardProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => AppDashboardRoute,
} as any)
const AppDashboardClientsCreateRoute =
  AppDashboardClientsCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AppDashboardClientsRoute,
  } as any)
const AppDashboardClientsIdRoute = AppDashboardClientsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AppDashboardClientsRoute,
} as any)
const AppDashboardAdminUsersRoute = AppDashboardAdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AppDashboardAdminRoute,
} as any)
const AppDashboardAdminUsersIndexRoute =
  AppDashboardAdminUsersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppDashboardAdminUsersRoute,
  } as any)
const AppDashboardAdminUsersIdRoute =
  AppDashboardAdminUsersIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AppDashboardAdminUsersRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/dashboard': typeof AppDashboardRouteWithChildren
  '/app/sandbox': typeof AppSandboxRoute
  '/app/': typeof AppIndexRoute
  '/app/dashboard/admin': typeof AppDashboardAdminRouteWithChildren
  '/app/dashboard/clients': typeof AppDashboardClientsRouteWithChildren
  '/app/dashboard/work-orders': typeof AppDashboardWorkOrdersRouteWithChildren
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/dashboard/admin/users': typeof AppDashboardAdminUsersRouteWithChildren
  '/app/dashboard/clients/$id': typeof AppDashboardClientsIdRoute
  '/app/dashboard/clients/create': typeof AppDashboardClientsCreateRoute
  '/app/dashboard/profile/$id': typeof AppDashboardProfileIdRoute
  '/app/dashboard/work-orders/$id': typeof AppDashboardWorkOrdersIdRoute
  '/app/dashboard/work-orders/create': typeof AppDashboardWorkOrdersCreateRoute
  '/app/dashboard/admin/': typeof AppDashboardAdminIndexRoute
  '/app/dashboard/clients/': typeof AppDashboardClientsIndexRoute
  '/app/dashboard/work-orders/': typeof AppDashboardWorkOrdersIndexRoute
  '/app/dashboard/admin/users/$id': typeof AppDashboardAdminUsersIdRoute
  '/app/dashboard/admin/users/': typeof AppDashboardAdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/sandbox': typeof AppSandboxRoute
  '/app': typeof AppIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/dashboard/clients/$id': typeof AppDashboardClientsIdRoute
  '/app/dashboard/clients/create': typeof AppDashboardClientsCreateRoute
  '/app/dashboard/profile/$id': typeof AppDashboardProfileIdRoute
  '/app/dashboard/work-orders/$id': typeof AppDashboardWorkOrdersIdRoute
  '/app/dashboard/work-orders/create': typeof AppDashboardWorkOrdersCreateRoute
  '/app/dashboard/admin': typeof AppDashboardAdminIndexRoute
  '/app/dashboard/clients': typeof AppDashboardClientsIndexRoute
  '/app/dashboard/work-orders': typeof AppDashboardWorkOrdersIndexRoute
  '/app/dashboard/admin/users/$id': typeof AppDashboardAdminUsersIdRoute
  '/app/dashboard/admin/users': typeof AppDashboardAdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/dashboard': typeof AppDashboardRouteWithChildren
  '/app/sandbox': typeof AppSandboxRoute
  '/app/': typeof AppIndexRoute
  '/app/dashboard/admin': typeof AppDashboardAdminRouteWithChildren
  '/app/dashboard/clients': typeof AppDashboardClientsRouteWithChildren
  '/app/dashboard/work-orders': typeof AppDashboardWorkOrdersRouteWithChildren
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/dashboard/admin/users': typeof AppDashboardAdminUsersRouteWithChildren
  '/app/dashboard/clients/$id': typeof AppDashboardClientsIdRoute
  '/app/dashboard/clients/create': typeof AppDashboardClientsCreateRoute
  '/app/dashboard/profile/$id': typeof AppDashboardProfileIdRoute
  '/app/dashboard/work-orders/$id': typeof AppDashboardWorkOrdersIdRoute
  '/app/dashboard/work-orders/create': typeof AppDashboardWorkOrdersCreateRoute
  '/app/dashboard/admin/': typeof AppDashboardAdminIndexRoute
  '/app/dashboard/clients/': typeof AppDashboardClientsIndexRoute
  '/app/dashboard/work-orders/': typeof AppDashboardWorkOrdersIndexRoute
  '/app/dashboard/admin/users/$id': typeof AppDashboardAdminUsersIdRoute
  '/app/dashboard/admin/users/': typeof AppDashboardAdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/sign-in'
    | '/sign-out'
    | '/app/dashboard'
    | '/app/sandbox'
    | '/app/'
    | '/app/dashboard/admin'
    | '/app/dashboard/clients'
    | '/app/dashboard/work-orders'
    | '/app/dashboard/'
    | '/app/dashboard/admin/users'
    | '/app/dashboard/clients/$id'
    | '/app/dashboard/clients/create'
    | '/app/dashboard/profile/$id'
    | '/app/dashboard/work-orders/$id'
    | '/app/dashboard/work-orders/create'
    | '/app/dashboard/admin/'
    | '/app/dashboard/clients/'
    | '/app/dashboard/work-orders/'
    | '/app/dashboard/admin/users/$id'
    | '/app/dashboard/admin/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-out'
    | '/app/sandbox'
    | '/app'
    | '/app/dashboard'
    | '/app/dashboard/clients/$id'
    | '/app/dashboard/clients/create'
    | '/app/dashboard/profile/$id'
    | '/app/dashboard/work-orders/$id'
    | '/app/dashboard/work-orders/create'
    | '/app/dashboard/admin'
    | '/app/dashboard/clients'
    | '/app/dashboard/work-orders'
    | '/app/dashboard/admin/users/$id'
    | '/app/dashboard/admin/users'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/sign-in'
    | '/sign-out'
    | '/app/dashboard'
    | '/app/sandbox'
    | '/app/'
    | '/app/dashboard/admin'
    | '/app/dashboard/clients'
    | '/app/dashboard/work-orders'
    | '/app/dashboard/'
    | '/app/dashboard/admin/users'
    | '/app/dashboard/clients/$id'
    | '/app/dashboard/clients/create'
    | '/app/dashboard/profile/$id'
    | '/app/dashboard/work-orders/$id'
    | '/app/dashboard/work-orders/create'
    | '/app/dashboard/admin/'
    | '/app/dashboard/clients/'
    | '/app/dashboard/work-orders/'
    | '/app/dashboard/admin/users/$id'
    | '/app/dashboard/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignOutRoute: typeof SignOutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-out': {
      id: '/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof SignOutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/sandbox': {
      id: '/app/sandbox'
      path: '/sandbox'
      fullPath: '/app/sandbox'
      preLoaderRoute: typeof AppSandboxRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboard': {
      id: '/app/dashboard'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/'
      fullPath: '/app/dashboard/'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppDashboardRoute
    }
    '/app/dashboard/work-orders': {
      id: '/app/dashboard/work-orders'
      path: '/work-orders'
      fullPath: '/app/dashboard/work-orders'
      preLoaderRoute: typeof AppDashboardWorkOrdersRouteImport
      parentRoute: typeof AppDashboardRoute
    }
    '/app/dashboard/clients': {
      id: '/app/dashboard/clients'
      path: '/clients'
      fullPath: '/app/dashboard/clients'
      preLoaderRoute: typeof AppDashboardClientsRouteImport
      parentRoute: typeof AppDashboardRoute
    }
    '/app/dashboard/admin': {
      id: '/app/dashboard/admin'
      path: '/admin'
      fullPath: '/app/dashboard/admin'
      preLoaderRoute: typeof AppDashboardAdminRouteImport
      parentRoute: typeof AppDashboardRoute
    }
    '/app/dashboard/work-orders/': {
      id: '/app/dashboard/work-orders/'
      path: '/'
      fullPath: '/app/dashboard/work-orders/'
      preLoaderRoute: typeof AppDashboardWorkOrdersIndexRouteImport
      parentRoute: typeof AppDashboardWorkOrdersRoute
    }
    '/app/dashboard/clients/': {
      id: '/app/dashboard/clients/'
      path: '/'
      fullPath: '/app/dashboard/clients/'
      preLoaderRoute: typeof AppDashboardClientsIndexRouteImport
      parentRoute: typeof AppDashboardClientsRoute
    }
    '/app/dashboard/admin/': {
      id: '/app/dashboard/admin/'
      path: '/'
      fullPath: '/app/dashboard/admin/'
      preLoaderRoute: typeof AppDashboardAdminIndexRouteImport
      parentRoute: typeof AppDashboardAdminRoute
    }
    '/app/dashboard/work-orders/create': {
      id: '/app/dashboard/work-orders/create'
      path: '/create'
      fullPath: '/app/dashboard/work-orders/create'
      preLoaderRoute: typeof AppDashboardWorkOrdersCreateRouteImport
      parentRoute: typeof AppDashboardWorkOrdersRoute
    }
    '/app/dashboard/work-orders/$id': {
      id: '/app/dashboard/work-orders/$id'
      path: '/$id'
      fullPath: '/app/dashboard/work-orders/$id'
      preLoaderRoute: typeof AppDashboardWorkOrdersIdRouteImport
      parentRoute: typeof AppDashboardWorkOrdersRoute
    }
    '/app/dashboard/profile/$id': {
      id: '/app/dashboard/profile/$id'
      path: '/profile/$id'
      fullPath: '/app/dashboard/profile/$id'
      preLoaderRoute: typeof AppDashboardProfileIdRouteImport
      parentRoute: typeof AppDashboardRoute
    }
    '/app/dashboard/clients/create': {
      id: '/app/dashboard/clients/create'
      path: '/create'
      fullPath: '/app/dashboard/clients/create'
      preLoaderRoute: typeof AppDashboardClientsCreateRouteImport
      parentRoute: typeof AppDashboardClientsRoute
    }
    '/app/dashboard/clients/$id': {
      id: '/app/dashboard/clients/$id'
      path: '/$id'
      fullPath: '/app/dashboard/clients/$id'
      preLoaderRoute: typeof AppDashboardClientsIdRouteImport
      parentRoute: typeof AppDashboardClientsRoute
    }
    '/app/dashboard/admin/users': {
      id: '/app/dashboard/admin/users'
      path: '/users'
      fullPath: '/app/dashboard/admin/users'
      preLoaderRoute: typeof AppDashboardAdminUsersRouteImport
      parentRoute: typeof AppDashboardAdminRoute
    }
    '/app/dashboard/admin/users/': {
      id: '/app/dashboard/admin/users/'
      path: '/'
      fullPath: '/app/dashboard/admin/users/'
      preLoaderRoute: typeof AppDashboardAdminUsersIndexRouteImport
      parentRoute: typeof AppDashboardAdminUsersRoute
    }
    '/app/dashboard/admin/users/$id': {
      id: '/app/dashboard/admin/users/$id'
      path: '/$id'
      fullPath: '/app/dashboard/admin/users/$id'
      preLoaderRoute: typeof AppDashboardAdminUsersIdRouteImport
      parentRoute: typeof AppDashboardAdminUsersRoute
    }
  }
}

interface AppDashboardAdminUsersRouteChildren {
  AppDashboardAdminUsersIdRoute: typeof AppDashboardAdminUsersIdRoute
  AppDashboardAdminUsersIndexRoute: typeof AppDashboardAdminUsersIndexRoute
}

const AppDashboardAdminUsersRouteChildren: AppDashboardAdminUsersRouteChildren =
  {
    AppDashboardAdminUsersIdRoute: AppDashboardAdminUsersIdRoute,
    AppDashboardAdminUsersIndexRoute: AppDashboardAdminUsersIndexRoute,
  }

const AppDashboardAdminUsersRouteWithChildren =
  AppDashboardAdminUsersRoute._addFileChildren(
    AppDashboardAdminUsersRouteChildren,
  )

interface AppDashboardAdminRouteChildren {
  AppDashboardAdminUsersRoute: typeof AppDashboardAdminUsersRouteWithChildren
  AppDashboardAdminIndexRoute: typeof AppDashboardAdminIndexRoute
}

const AppDashboardAdminRouteChildren: AppDashboardAdminRouteChildren = {
  AppDashboardAdminUsersRoute: AppDashboardAdminUsersRouteWithChildren,
  AppDashboardAdminIndexRoute: AppDashboardAdminIndexRoute,
}

const AppDashboardAdminRouteWithChildren =
  AppDashboardAdminRoute._addFileChildren(AppDashboardAdminRouteChildren)

interface AppDashboardClientsRouteChildren {
  AppDashboardClientsIdRoute: typeof AppDashboardClientsIdRoute
  AppDashboardClientsCreateRoute: typeof AppDashboardClientsCreateRoute
  AppDashboardClientsIndexRoute: typeof AppDashboardClientsIndexRoute
}

const AppDashboardClientsRouteChildren: AppDashboardClientsRouteChildren = {
  AppDashboardClientsIdRoute: AppDashboardClientsIdRoute,
  AppDashboardClientsCreateRoute: AppDashboardClientsCreateRoute,
  AppDashboardClientsIndexRoute: AppDashboardClientsIndexRoute,
}

const AppDashboardClientsRouteWithChildren =
  AppDashboardClientsRoute._addFileChildren(AppDashboardClientsRouteChildren)

interface AppDashboardWorkOrdersRouteChildren {
  AppDashboardWorkOrdersIdRoute: typeof AppDashboardWorkOrdersIdRoute
  AppDashboardWorkOrdersCreateRoute: typeof AppDashboardWorkOrdersCreateRoute
  AppDashboardWorkOrdersIndexRoute: typeof AppDashboardWorkOrdersIndexRoute
}

const AppDashboardWorkOrdersRouteChildren: AppDashboardWorkOrdersRouteChildren =
  {
    AppDashboardWorkOrdersIdRoute: AppDashboardWorkOrdersIdRoute,
    AppDashboardWorkOrdersCreateRoute: AppDashboardWorkOrdersCreateRoute,
    AppDashboardWorkOrdersIndexRoute: AppDashboardWorkOrdersIndexRoute,
  }

const AppDashboardWorkOrdersRouteWithChildren =
  AppDashboardWorkOrdersRoute._addFileChildren(
    AppDashboardWorkOrdersRouteChildren,
  )

interface AppDashboardRouteChildren {
  AppDashboardAdminRoute: typeof AppDashboardAdminRouteWithChildren
  AppDashboardClientsRoute: typeof AppDashboardClientsRouteWithChildren
  AppDashboardWorkOrdersRoute: typeof AppDashboardWorkOrdersRouteWithChildren
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppDashboardProfileIdRoute: typeof AppDashboardProfileIdRoute
}

const AppDashboardRouteChildren: AppDashboardRouteChildren = {
  AppDashboardAdminRoute: AppDashboardAdminRouteWithChildren,
  AppDashboardClientsRoute: AppDashboardClientsRouteWithChildren,
  AppDashboardWorkOrdersRoute: AppDashboardWorkOrdersRouteWithChildren,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppDashboardProfileIdRoute: AppDashboardProfileIdRoute,
}

const AppDashboardRouteWithChildren = AppDashboardRoute._addFileChildren(
  AppDashboardRouteChildren,
)

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRouteWithChildren
  AppSandboxRoute: typeof AppSandboxRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRouteWithChildren,
  AppSandboxRoute: AppSandboxRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  SignInRoute: SignInRoute,
  SignOutRoute: SignOutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
