/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignOutRouteImport } from './routes/sign-out'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppUserRouteImport } from './routes/app/user'
import { Route as AppClientsRouteImport } from './routes/app/clients'
import { Route as AppClientsIndexRouteImport } from './routes/app/clients/index'
import { Route as AppClientsIdRouteImport } from './routes/app/clients/$id'

const SignOutRoute = SignOutRouteImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppUserRoute = AppUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AppRoute,
} as any)
const AppClientsRoute = AppClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AppRoute,
} as any)
const AppClientsIndexRoute = AppClientsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppClientsRoute,
} as any)
const AppClientsIdRoute = AppClientsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AppClientsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/clients': typeof AppClientsRouteWithChildren
  '/app/user': typeof AppUserRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients/': typeof AppClientsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/user': typeof AppUserRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients': typeof AppClientsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-out': typeof SignOutRoute
  '/app/clients': typeof AppClientsRouteWithChildren
  '/app/user': typeof AppUserRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients/': typeof AppClientsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/sign-in'
    | '/sign-out'
    | '/app/clients'
    | '/app/user'
    | '/app/clients/$id'
    | '/app/clients/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/sign-in'
    | '/sign-out'
    | '/app/user'
    | '/app/clients/$id'
    | '/app/clients'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/sign-in'
    | '/sign-out'
    | '/app/clients'
    | '/app/user'
    | '/app/clients/$id'
    | '/app/clients/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignOutRoute: typeof SignOutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-out': {
      id: '/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof SignOutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/user': {
      id: '/app/user'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/clients': {
      id: '/app/clients'
      path: '/clients'
      fullPath: '/app/clients'
      preLoaderRoute: typeof AppClientsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/clients/': {
      id: '/app/clients/'
      path: '/'
      fullPath: '/app/clients/'
      preLoaderRoute: typeof AppClientsIndexRouteImport
      parentRoute: typeof AppClientsRoute
    }
    '/app/clients/$id': {
      id: '/app/clients/$id'
      path: '/$id'
      fullPath: '/app/clients/$id'
      preLoaderRoute: typeof AppClientsIdRouteImport
      parentRoute: typeof AppClientsRoute
    }
  }
}

interface AppClientsRouteChildren {
  AppClientsIdRoute: typeof AppClientsIdRoute
  AppClientsIndexRoute: typeof AppClientsIndexRoute
}

const AppClientsRouteChildren: AppClientsRouteChildren = {
  AppClientsIdRoute: AppClientsIdRoute,
  AppClientsIndexRoute: AppClientsIndexRoute,
}

const AppClientsRouteWithChildren = AppClientsRoute._addFileChildren(
  AppClientsRouteChildren,
)

interface AppRouteChildren {
  AppClientsRoute: typeof AppClientsRouteWithChildren
  AppUserRoute: typeof AppUserRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppClientsRoute: AppClientsRouteWithChildren,
  AppUserRoute: AppUserRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  SignInRoute: SignInRoute,
  SignOutRoute: SignOutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
